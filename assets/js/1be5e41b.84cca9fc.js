"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8434],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,c=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=l(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||c;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=r.length,i=new Array(c);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var l=2;l<c;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},372:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const c={sidebar_label:"make_service",title:"agentchat.service.make_service"},i=void 0,o={unversionedId:"reference/agentchat/service/make_service",id:"reference/agentchat/service/make_service",isDocsHomePage:!1,title:"agentchat.service.make_service",description:"MakeService Objects",source:"@site/docs/reference/agentchat/service/make_service.md",sourceDirName:"reference/agentchat/service",slug:"/reference/agentchat/service/make_service",permalink:"/autogen/docs/reference/agentchat/service/make_service",editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/agentchat/service/make_service.md",tags:[],version:"current",frontMatter:{sidebar_label:"make_service",title:"agentchat.service.make_service"},sidebar:"referenceSideBar",previous:{title:"text_analyzer_agent",permalink:"/autogen/docs/reference/agentchat/contrib/text_analyzer_agent"},next:{title:"search_engine_ddg",permalink:"/autogen/docs/reference/agentchat/service/search_engine_ddg"}},s=[{value:"MakeService Objects",id:"makeservice-objects",children:[{value:"call_api_url",id:"call_api_url",children:[],level:4}],level:2}],l={toc:s};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"makeservice-objects"},"MakeService Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class MakeService()\n")),(0,a.kt)("h4",{id:"call_api_url"},"call","_","api","_","url"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@staticmethod\ndef call_api_url(sender,\n                 url: str,\n                 method: str,\n                 params: Optional[Dict[str, Any]] = None,\n                 body: Optional[Dict[str, Any]] = None,\n                 headers: Optional[Dict[str, str]] = None,\n                 timeout: int = 30) -> Dict[str, Any]\n")),(0,a.kt)("p",null,"Makes an HTTP request to the specified URL with given parameters and body."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"url (str): The URL to which the request is sent."),(0,a.kt)("li",{parentName:"ul"},"method (str): HTTP method (e.g., 'GET', 'POST', 'PUT', 'DELETE')."),(0,a.kt)("li",{parentName:"ul"},"params (Optional[Dict","[str, Any]","]): URL parameters for GET requests."),(0,a.kt)("li",{parentName:"ul"},"body (Optional[Dict","[str, Any]","]): Data payload for POST, PUT, PATCH requests."),(0,a.kt)("li",{parentName:"ul"},"headers (Optional[Dict","[str, str]","]): HTTP headers."),(0,a.kt)("li",{parentName:"ul"},"timeout (int): Timeout for the request in seconds.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Dict","[str, Any]",": Response from the server.")))}p.isMDXComponent=!0}}]);