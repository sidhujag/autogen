"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2408],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>h});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=n.createContext({}),l=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(i.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},g=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),g=l(t),h=a,d=g["".concat(i,".").concat(h)]||g[h]||u[h]||s;return t?n.createElement(d,o(o({ref:r},p),{},{components:t})):n.createElement(d,o({ref:r},p))}));function h(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=g;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<s;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},489:(e,r,t)=>{t.r(r),t.d(r,{contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var n=t(7462),a=(t(7294),t(3905));const s={sidebar_label:"search_engine_serpapi",title:"agentchat.tools.search_engine_serpapi"},o=void 0,c={unversionedId:"reference/agentchat/tools/search_engine_serpapi",id:"reference/agentchat/tools/search_engine_serpapi",isDocsHomePage:!1,title:"agentchat.tools.search_engine_serpapi",description:"@Time   27",source:"@site/docs/reference/agentchat/tools/search_engine_serpapi.md",sourceDirName:"reference/agentchat/tools",slug:"/reference/agentchat/tools/search_engine_serpapi",permalink:"/autogen/docs/reference/agentchat/tools/search_engine_serpapi",editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/agentchat/tools/search_engine_serpapi.md",tags:[],version:"current",frontMatter:{sidebar_label:"search_engine_serpapi",title:"agentchat.tools.search_engine_serpapi"},sidebar:"referenceSideBar",previous:{title:"search_engine_googleapi",permalink:"/autogen/docs/reference/agentchat/tools/search_engine_googleapi"},next:{title:"search_engine_serper",permalink:"/autogen/docs/reference/agentchat/tools/search_engine_serper"}},i=[{value:"SerpAPIWrapper Objects",id:"serpapiwrapper-objects",children:[{value:"search_engine",id:"search_engine",children:[],level:4},{value:"run",id:"run",children:[],level:4},{value:"results",id:"results",children:[],level:4},{value:"get_params",id:"get_params",children:[],level:4}],level:2}],l={toc:i};function p(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"@Time    : 2023/5/23 18:27\n@Author  : alexanderwu\n@File    : search_engine_serpapi.py"),(0,a.kt)("h2",{id:"serpapiwrapper-objects"},"SerpAPIWrapper Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class SerpAPIWrapper(BaseModel)\n")),(0,a.kt)("h4",{id:"search_engine"},"search","_","engine"),(0,a.kt)("p",null,":meta private:"),(0,a.kt)("h4",{id:"run"},"run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@staticmethod\nasync def run(query, max_results: int = 8, as_string: bool = True) -> str\n")),(0,a.kt)("p",null,"Run query through SerpAPI and parse result async."),(0,a.kt)("h4",{id:"results"},"results"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"async def results(query: str, max_results: int) -> dict\n")),(0,a.kt)("p",null,"Use aiohttp to run query through SerpAPI and return the results async."),(0,a.kt)("h4",{id:"get_params"},"get","_","params"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def get_params(query: str) -> Dict[str, str]\n")),(0,a.kt)("p",null,"Get parameters for SerpAPI."))}p.isMDXComponent=!0}}]);