"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6330],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>g});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=n.createContext({}),l=function(e){var r=n.useContext(o),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(o.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(t),g=a,h=d["".concat(o,".").concat(g)]||d[g]||u[g]||c;return t?n.createElement(h,s(s({ref:r},p),{},{components:t})):n.createElement(h,s({ref:r},p))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var c=t.length,s=new Array(c);s[0]=d;var i={};for(var o in r)hasOwnProperty.call(r,o)&&(i[o]=r[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<c;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4207:(e,r,t)=>{t.r(r),t.d(r,{contentTitle:()=>s,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>o});var n=t(3117),a=(t(7294),t(3905));const c={sidebar_label:"search_engine_serper",title:"agentchat.service.search_engine_serper"},s=void 0,i={unversionedId:"reference/agentchat/service/search_engine_serper",id:"reference/agentchat/service/search_engine_serper",isDocsHomePage:!1,title:"agentchat.service.search_engine_serper",description:"@Time   27",source:"@site/docs/reference/agentchat/service/search_engine_serper.md",sourceDirName:"reference/agentchat/service",slug:"/reference/agentchat/service/search_engine_serper",permalink:"/autogen/docs/reference/agentchat/service/search_engine_serper",editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/agentchat/service/search_engine_serper.md",tags:[],version:"current",frontMatter:{sidebar_label:"search_engine_serper",title:"agentchat.service.search_engine_serper"},sidebar:"referenceSideBar",previous:{title:"backend_service",permalink:"/autogen/docs/reference/agentchat/service/backend_service"},next:{title:"zapier_service",permalink:"/autogen/docs/reference/agentchat/service/zapier_service"}},o=[{value:"WebSearchSerperWrapper Objects",id:"websearchserperwrapper-objects",children:[{value:"run",id:"run",children:[],level:4},{value:"results",id:"results",children:[],level:4},{value:"get_payloads",id:"get_payloads",children:[],level:4}],level:2}],l={toc:o};function p(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"@Time    : 2023/5/23 18:27\n@Author  : alexanderwu\n@File    : search_engine_serpapi.py"),(0,a.kt)("h2",{id:"websearchserperwrapper-objects"},"WebSearchSerperWrapper Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class WebSearchSerperWrapper(BaseModel)\n")),(0,a.kt)("h4",{id:"run"},"run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@staticmethod\nasync def run(queries: List[str],\n              max_results: int = 8,\n              type: str = 'search',\n              tbs: str = None,\n              **args) -> str\n")),(0,a.kt)("p",null,"Run query through Serper and parse result async."),(0,a.kt)("h4",{id:"results"},"results"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"async def results(queries: list[str]) -> dict\n")),(0,a.kt)("p",null,"Use aiohttp to run query through Serper and return the results async."),(0,a.kt)("h4",{id:"get_payloads"},"get","_","payloads"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def get_payloads(queries: list[str]) -> Dict[str, str]\n")),(0,a.kt)("p",null,"Get payloads for Serper."))}p.isMDXComponent=!0}}]);