"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5115],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),l=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),g=a,m=d["".concat(o,".").concat(g)]||d[g]||p[g]||i;return n?r.createElement(m,c(c({ref:t},u),{},{components:n})):r.createElement(m,c({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var l=2;l<i;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8009:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_label:"coding_assistance_service",title:"agentchat.service.coding_assistance_service"},c=void 0,s={unversionedId:"reference/agentchat/service/coding_assistance_service",id:"reference/agentchat/service/coding_assistance_service",isDocsHomePage:!1,title:"agentchat.service.coding_assistance_service",description:"CodingAssistantService Objects",source:"@site/docs/reference/agentchat/service/coding_assistance_service.md",sourceDirName:"reference/agentchat/service",slug:"/reference/agentchat/service/coding_assistance_service",permalink:"/autogen/docs/reference/agentchat/service/coding_assistance_service",editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/agentchat/service/coding_assistance_service.md",tags:[],version:"current",frontMatter:{sidebar_label:"coding_assistance_service",title:"agentchat.service.coding_assistance_service"},sidebar:"referenceSideBar",previous:{title:"text_analyzer_agent",permalink:"/autogen/docs/reference/agentchat/contrib/text_analyzer_agent"},next:{title:"search_engine_serper",permalink:"/autogen/docs/reference/agentchat/service/search_engine_serper"}},o=[{value:"CodingAssistantService Objects",id:"codingassistantservice-objects",children:[{value:"create_github_pull_request",id:"create_github_pull_request",children:[],level:4}],level:2}],l={toc:o};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"codingassistantservice-objects"},"CodingAssistantService Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class CodingAssistantService()\n")),(0,a.kt)("h4",{id:"create_github_pull_request"},"create","_","github","_","pull","_","request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'@staticmethod\ndef create_github_pull_request(token, repo, title, body, head, base="main")\n')),(0,a.kt)("p",null,"Create a pull request on GitHub."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"token"),": Personal access token for the GitHub API"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"repo"),': Repository name with owner (e.g., "owner/repo")'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"title"),": Title of the pull request"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"body"),": Content of the pull request"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"head"),": Name of the branch where your changes are implemented"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"base"),': Branch you want the changes pulled into (default "main")')))}u.isMDXComponent=!0}}]);