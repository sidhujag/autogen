"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1689],{6398:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>o});var s=r(5893),i=r(1151);const t={sidebar_label:"browser_utils",title:"browser_utils"},l=void 0,d={id:"reference/browser_utils",title:"browser_utils",description:"TextRendererResult",source:"@site/docs/reference/browser_utils.md",sourceDirName:"reference",slug:"/reference/browser_utils",permalink:"/autogen/docs/reference/browser_utils",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/browser_utils.md",tags:[],version:"current",frontMatter:{sidebar_label:"browser_utils",title:"browser_utils"},sidebar:"referenceSideBar",previous:{title:"openai_utils",permalink:"/autogen/docs/reference/oai/openai_utils"},next:{title:"code_utils",permalink:"/autogen/docs/reference/code_utils"}},a={},o=[{value:"TextRendererResult",id:"textrendererresult",level:2},{value:"PageTextRenderer",id:"pagetextrenderer",level:2},{value:"claim_responsibility",id:"claim_responsibility",level:3},{value:"render_page",id:"render_page",level:3},{value:"PlainTextRenderer",id:"plaintextrenderer",level:2},{value:"HtmlRenderer",id:"htmlrenderer",level:2},{value:"WikipediaRenderer",id:"wikipediarenderer",level:2},{value:"YouTubeRenderer",id:"youtuberenderer",level:2},{value:"PdfRenderer",id:"pdfrenderer",level:2},{value:"FallbackPageRenderer",id:"fallbackpagerenderer",level:2},{value:"SimpleTextBrowser",id:"simpletextbrowser",level:2},{value:"address",id:"address",level:3},{value:"viewport",id:"viewport",level:3},{value:"page_content",id:"page_content",level:3},{value:"find_on_page",id:"find_on_page",level:3},{value:"find_next",id:"find_next",level:3},{value:"visit_page",id:"visit_page",level:3},{value:"register_page_renderer",id:"register_page_renderer",level:3},{value:"register_error_renderer",id:"register_error_renderer",level:3},{value:"get_file_path_from_url",id:"get_file_path_from_url",level:3},{value:"fix_missing_protocol",id:"fix_missing_protocol",level:3},{value:"extract_pdf_text",id:"extract_pdf_text",level:3},{value:"download_using_requests",id:"download_using_requests",level:3},{value:"SeleniumBrowser",id:"seleniumbrowser",level:3},{value:"SeleniumBrowserWrapper",id:"seleniumbrowserwrapper",level:2},{value:"address",id:"address-1",level:3},{value:"viewport",id:"viewport-1",level:3},{value:"page_content",id:"page_content-1",level:3},{value:"set_address",id:"set_address",level:3},{value:"visit_page",id:"visit_page-1",level:3},{value:"page_down",id:"page_down",level:3},{value:"page_up",id:"page_up",level:3},{value:"close",id:"close",level:3},{value:"download",id:"download",level:3}];function c(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"textrendererresult",children:"TextRendererResult"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class TextRendererResult()\n"})}),"\n",(0,s.jsx)(n.p,{children:"The result of rendering a webpage to text."}),"\n",(0,s.jsx)(n.h2,{id:"pagetextrenderer",children:"PageTextRenderer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class PageTextRenderer()\n"})}),"\n",(0,s.jsx)(n.p,{children:"A TextRender is used by the SimpleTextBrowser to claim\nresponsibility for rendering a page. Once a page has been claimed,\nthe instance' render_page function will be called, and the result\nstream is expected to be consumed -- there is no going back."}),"\n",(0,s.jsx)(n.h3,{id:"claim_responsibility",children:"claim_responsibility"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def claim_responsibility(url, status_code, content_type, **kwargs) -> bool\n"})}),"\n",(0,s.jsx)(n.p,{children:"Return true only if the text renderer is prepared to\nclaim responsibility for the page."}),"\n",(0,s.jsx)(n.h3,{id:"render_page",children:"render_page"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def render_page(response, url, status_code,\n                content_type) -> TextRendererResult\n"})}),"\n",(0,s.jsx)(n.p,{children:"Return true only if the text renderer is prepared to\nclaim responsibility for the page."}),"\n",(0,s.jsx)(n.h2,{id:"plaintextrenderer",children:"PlainTextRenderer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class PlainTextRenderer(PageTextRenderer)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Anything with content type text/plain"}),"\n",(0,s.jsx)(n.h2,{id:"htmlrenderer",children:"HtmlRenderer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class HtmlRenderer(PageTextRenderer)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Anything with content type text/html"}),"\n",(0,s.jsx)(n.h2,{id:"wikipediarenderer",children:"WikipediaRenderer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class WikipediaRenderer(PageTextRenderer)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Handle Wikipedia pages separately, focusing only on the main document content."}),"\n",(0,s.jsx)(n.h2,{id:"youtuberenderer",children:"YouTubeRenderer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class YouTubeRenderer(PageTextRenderer)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Handle YouTube specially, focusing on the video title, description, and transcript."}),"\n",(0,s.jsx)(n.h2,{id:"pdfrenderer",children:"PdfRenderer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class PdfRenderer(PageTextRenderer)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Anything with content type application/pdf"}),"\n",(0,s.jsx)(n.h2,{id:"fallbackpagerenderer",children:"FallbackPageRenderer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class FallbackPageRenderer(PageTextRenderer)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Accept all requests that come to it."}),"\n",(0,s.jsx)(n.h2,{id:"simpletextbrowser",children:"SimpleTextBrowser"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class SimpleTextBrowser()\n"})}),"\n",(0,s.jsx)(n.p,{children:"(In preview) An extremely simple text-based web browser comparable to Lynx. Suitable for Agentic use."}),"\n",(0,s.jsx)(n.h3,{id:"address",children:"address"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"@property\ndef address() -> str\n"})}),"\n",(0,s.jsx)(n.p,{children:"Return the address of the current page."}),"\n",(0,s.jsx)(n.h3,{id:"viewport",children:"viewport"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"@property\ndef viewport() -> str\n"})}),"\n",(0,s.jsx)(n.p,{children:"Return the content of the current viewport."}),"\n",(0,s.jsx)(n.h3,{id:"page_content",children:"page_content"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"@property\ndef page_content() -> str\n"})}),"\n",(0,s.jsx)(n.p,{children:"Return the full contents of the current page."}),"\n",(0,s.jsx)(n.h3,{id:"find_on_page",children:"find_on_page"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def find_on_page(query: str) -> Union[str, None]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Searches for the query from the current viewport forward, looping back to the start if necessary."}),"\n",(0,s.jsx)(n.h3,{id:"find_next",children:"find_next"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def find_next() -> None\n"})}),"\n",(0,s.jsx)(n.p,{children:"Scroll to the next viewport that matches the query"}),"\n",(0,s.jsx)(n.h3,{id:"visit_page",children:"visit_page"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def visit_page(path_or_uri: str, category: Optional[str] = None)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Update the address, visit the page, and return the content of the viewport."}),"\n",(0,s.jsx)(n.h3,{id:"register_page_renderer",children:"register_page_renderer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def register_page_renderer(renderer: PageTextRenderer) -> None\n"})}),"\n",(0,s.jsx)(n.p,{children:"Register a page text renderer."}),"\n",(0,s.jsx)(n.h3,{id:"register_error_renderer",children:"register_error_renderer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def register_error_renderer(renderer: PageTextRenderer) -> None\n"})}),"\n",(0,s.jsx)(n.p,{children:"Register a page text renderer."}),"\n",(0,s.jsx)(n.h3,{id:"get_file_path_from_url",children:"get_file_path_from_url"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def get_file_path_from_url(url)\n"})}),"\n",(0,s.jsx)(n.p,{children:"get_file_path_from_url function: This function takes a URL as input and returns the corresponding local file path as a string."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"url"})," ",(0,s.jsx)(n.em,{children:"str | ParseResult"})," - The URL of the file for which the local path is to be obtained."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"str"})," - The local file path on the system as a string."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"fix_missing_protocol",children:"fix_missing_protocol"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def fix_missing_protocol(img_url, source_url)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Fixes a URL by adding the missing protocol (http or https) based on the provided domain."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"img_url (str): The input image URL to be fixed."}),"\n",(0,s.jsx)(n.li,{children:"domain (str): The domain of the image URL which is used to determine the protocol."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"str: A corrected URL string with the missing protocol added."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"extract_pdf_text",children:"extract_pdf_text"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def extract_pdf_text(local_pdf_path)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Extracts the text content from a local PDF file and returns it as a string."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"local_pdf_path (str): The path to the local PDF file from which the text will be extracted."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"str: A string containing the text content of the provided PDF file."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"download_using_requests",children:"download_using_requests"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def download_using_requests(driver, download_url, save_path)\n"})}),"\n",(0,s.jsx)(n.p,{children:"This function takes a Selenium WebDriver instance, a URL to download a file, and a path where you want to save the downloaded file."}),"\n",(0,s.jsxs)(n.p,{children:["It first retrieves cookies from the given driver, converts them into a format suitable for use with the ",(0,s.jsx)(n.code,{children:"requests"})," library, and then uses these cookies to successfully download the specified file using the ",(0,s.jsx)(n.code,{children:"requests.get()"})," function. The ",(0,s.jsx)(n.code,{children:"User-Agent"})," header is also set to match that used by the WebDriver instance."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"driver"})," ",(0,s.jsx)(n.em,{children:"webdriver.chrome.webdriver.WebDriver"})," - A Selenium WebDriver instance, typically obtained from selenium.webdriver.Chrome() or another appropriate method for your browser of choice."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"download_url"})," ",(0,s.jsx)(n.em,{children:"str"})," - The URL to the file you want to download."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"save_path"})," ",(0,s.jsx)(n.em,{children:"str"})," - The path where you would like the downloaded file to be saved."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,s.jsx)(n.p,{children:"None, but successfully downloads a file from the given URL using the cookies and headers obtained from the WebDriver instance."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Raises"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Exception"})," - If the file cannot be downloaded due to an error in the ",(0,s.jsx)(n.code,{children:"requests.get()"})," call."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"seleniumbrowser",children:"SeleniumBrowser"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def SeleniumBrowser(**kwargs)\n"})}),"\n",(0,s.jsx)(n.p,{children:"This function launches a headless Selenium browser based on the specified 'browser'. The available options are 'edge', 'firefox', and 'chrome'."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"browser"})," ",(0,s.jsx)(n.em,{children:"str"})," - A string specifying which browser to launch. Defaults to 'firefox'."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"download_dir"})," ",(0,s.jsx)(n.em,{children:"str"})," - A path to where downloaded files are stored.  Defaults to None"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"webdriver"})," - An instance of the Selenium WebDriver based on the specified browser.  User can open a new page by ",(0,s.jsx)(n.code,{children:"webdriver.get('https://www.microsoft.com')"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Raises"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ImportError"})," - If selenium package is not installed, it raises an ImportError with a message suggesting to install it using pip."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"seleniumbrowserwrapper",children:"SeleniumBrowserWrapper"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class SeleniumBrowserWrapper()\n"})}),"\n",(0,s.jsx)(n.p,{children:"SeleniumBrowserWrapper class is a wrapper that manages the interaction with a Selenium web driver.\nIt provides methods to control the browser, set up the viewport size, and download files."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'start_page (Optional[str]): The initial URL of the web page to load. Defaults to "about:blank".'}),"\n",(0,s.jsx)(n.li,{children:"viewport_size (Optional[int]): The width of the viewport in pixels. Defaults to 1024 * 8."}),"\n",(0,s.jsxs)(n.li,{children:["downloads_folder (Optional[Union[str, None]]): The directory where downloaded files will be saved. If set to ",(0,s.jsx)(n.code,{children:"None"}),", default downloads folder will be used."]}),"\n",(0,s.jsx)(n.li,{children:"bing_api_key (Optional[Union[str, None]]): The API key for Bing search engine."}),"\n",(0,s.jsx)(n.li,{children:"request_kwargs (Optional[Union[Dict[str, Any], None]]): Additional keyword arguments that can be passed for customization."}),"\n",(0,s.jsx)(n.li,{children:"web_driver (Optional[str]): The type of web driver to use. Defaults to 'edge'."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"start_page (str): The initial URL of the web page to load."}),"\n",(0,s.jsx)(n.li,{children:"viewport_size (int): The width of the viewport in pixels."}),"\n",(0,s.jsx)(n.li,{children:"downloads_folder (Union[str, None]): The directory where downloaded files will be saved."}),"\n",(0,s.jsx)(n.li,{children:"history (List[str]): A list containing the URLs visited by the browser."}),"\n",(0,s.jsx)(n.li,{children:"page_title (Optional[str]): The title of the current web page."}),"\n",(0,s.jsx)(n.li,{children:"viewport_current_page (int): The index of the current web page in relation to all pages loaded."}),"\n",(0,s.jsx)(n.li,{children:"viewport_pages (List[Tuple[int, int]]): A list containing tuples of width and height for each viewed web page."}),"\n",(0,s.jsx)(n.li,{children:"bing_api_key (Optional[str]): The API key for Bing search engine."}),"\n",(0,s.jsx)(n.li,{children:"request_kwargs (Optional[Union[Dict[str, Any], None]]): Additional keyword arguments passed during instantiation."}),"\n",(0,s.jsx)(n.li,{children:"_page_content (str): The content of the current web page."}),"\n",(0,s.jsx)(n.li,{children:"driver: An instance of SeleniumBrowser class that manages the browser interaction."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Notes"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Viewport Size and Pages: The concept of viewport size and pagination doesn't directly apply to Selenium as it does in a text-based browser. Selenium interacts with the whole page. However, actions like scrolling can be simulated."}),"\n",(0,s.jsx)(n.li,{children:"Downloads Folder: This is handled through ChromeOptions if you need to set a default download directory."}),"\n",(0,s.jsx)(n.li,{children:"History Management: This wrapper maintains a simple history of visited URLs for compatibility with the SimpleTextBrowser's API."}),"\n",(0,s.jsx)(n.li,{children:"Page Content: Selenium's page_source property provides the HTML content of the current page, making the distinction between viewport and page content less relevant."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"address-1",children:"address"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"@property\ndef address() -> str\n"})}),"\n",(0,s.jsx)(n.p,{children:"Return the address of the current page."}),"\n",(0,s.jsx)(n.h3,{id:"viewport-1",children:"viewport"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"@property\ndef viewport() -> str\n"})}),"\n",(0,s.jsx)(n.p,{children:"Return the content of the current viewport."}),"\n",(0,s.jsx)(n.h3,{id:"page_content-1",children:"page_content"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"@property\ndef page_content() -> str\n"})}),"\n",(0,s.jsx)(n.p,{children:"Return the full contents of the current page."}),"\n",(0,s.jsx)(n.h3,{id:"set_address",children:"set_address"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def set_address(uri_or_path: str) -> None\n"})}),"\n",(0,s.jsx)(n.p,{children:"Navigate to a given URI and update history."}),"\n",(0,s.jsx)(n.h3,{id:"visit_page-1",children:"visit_page"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def visit_page(path_or_uri: str) -> str\n"})}),"\n",(0,s.jsx)(n.p,{children:"Navigate to a page and return its content."}),"\n",(0,s.jsx)(n.h3,{id:"page_down",children:"page_down"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def page_down() -> None\n"})}),"\n",(0,s.jsx)(n.p,{children:"Simulate page down action."}),"\n",(0,s.jsx)(n.h3,{id:"page_up",children:"page_up"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def page_up() -> None\n"})}),"\n",(0,s.jsx)(n.p,{children:"Simulate page up action."}),"\n",(0,s.jsx)(n.h3,{id:"close",children:"close"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def close()\n"})}),"\n",(0,s.jsx)(n.p,{children:"Close the browser."}),"\n",(0,s.jsx)(n.h3,{id:"download",children:"download"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def download(uri_or_path: str) -> None\n"})}),"\n",(0,s.jsx)(n.p,{children:"Download from a given URI"})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>l});var s=r(7294);const i={},t=s.createContext(i);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);