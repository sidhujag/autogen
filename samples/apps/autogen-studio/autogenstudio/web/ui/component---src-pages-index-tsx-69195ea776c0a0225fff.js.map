{"version":3,"file":"component---src-pages-index-tsx-69195ea776c0a0225fff.js","mappings":"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","sources":["webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/ChevronRightIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/PencilIcon.js","webpack://AutoGen_Studio/./src/components/views/playground/utils/selectors.tsx","webpack://AutoGen_Studio/./src/components/views/playground/sessions.tsx","webpack://AutoGen_Studio/./src/components/views/playground/sidebar.tsx","webpack://AutoGen_Studio/./src/components/views/playground/ra.tsx","webpack://AutoGen_Studio/./src/pages/index.tsx","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/ChevronLeftIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/PlusIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/Square3Stack3DIcon.js","webpack://AutoGen_Studio/./node_modules/@heroicons/react/24/outline/esm/TrashIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction ChevronRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m8.25 4.5 7.5 7.5-7.5 7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PencilIcon);\nexport default ForwardRef;","import { Select, message } from \"antd\";\nimport * as React from \"react\";\nimport { LoadingOverlay } from \"../../../atoms\";\nimport { IWorkflow, IStatus } from \"../../../types\";\nimport { fetchJSON, getServerUrl } from \"../../../utils\";\nimport { appContext } from \"../../../../hooks/provider\";\nimport { Link } from \"gatsby\";\n\nconst WorkflowSelector = ({\n  workflow,\n  setWorkflow,\n  workflow_id,\n  disabled,\n}: {\n  workflow: IWorkflow | null;\n  setWorkflow: (workflow: IWorkflow) => void;\n  workflow_id: number | undefined;\n  disabled?: boolean;\n}) => {\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  const [loading, setLoading] = React.useState(false);\n  const [workflows, setWorkflows] = React.useState<IWorkflow[]>([]);\n  const [selectedWorkflow, setSelectedWorkflow] = React.useState<number>(0);\n\n  const { user } = React.useContext(appContext);\n  const serverUrl = getServerUrl();\n  const listWorkflowsUrl = `${serverUrl}/workflows?user_id=${user?.email}`;\n  const fetchWorkFlow = () => {\n    setError(null);\n    setLoading(true);\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        // message.success(data.message);\n        setWorkflows(data.data);\n        if (data.data.length > 0) {\n          if (!disabled) {\n            setWorkflow(data.data[0]);\n          } else {\n            const index = data.data.findIndex((item:IWorkflow) => item.id === workflow_id);\n            if (index !== -1) {\n              setSelectedWorkflow(index);\n              setWorkflow(data.data[index]);\n            }\n          }\n        }\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(listWorkflowsUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (user) {\n      fetchWorkFlow();\n    }\n  }, []);\n\n  return (\n    <div className=\" mb-4 relative\">\n      <div className=\"text-sm mt-2 mb-2 pb-1  \">\n        {\" \"}\n        Please select an agent workflow to begin.{\" \"}\n      </div>\n\n      <div className=\"relative mt-2 \">\n        <LoadingOverlay loading={loading} />\n\n        {workflows && workflows.length > 0 && (\n          <Select\n            disabled={disabled}\n            className=\"w-full\"\n            value={workflows[selectedWorkflow].name}\n            onChange={(value: any) => {\n              setSelectedWorkflow(value);\n              setWorkflow(workflows[value]);\n            }}\n            options={\n              workflows.map((config, index) => {\n                return { label: config.name, value: index };\n              }) as any\n            }\n          />\n        )}\n        <div className=\"mt-2 text-xs hidden\">\n          {\" \"}\n          <div className=\"my-2 text-xs\"> {workflow?.name}</div>\n          View all workflows{\" \"}\n          <span className=\"text-accent\">\n            {\" \"}\n            <Link to=\"/build\">here</Link>\n          </span>{\" \"}\n        </div>\n      </div>\n      {!workflows ||\n        (workflows && workflows.length === 0 && (\n          <div className=\"p-1 border rounded text-xs px-2 text-secondary\">\n            {\" \"}\n            No agent workflows found.\n          </div>\n        ))}\n    </div>\n  );\n};\nexport default WorkflowSelector;\n","import {\n  ChatBubbleLeftRightIcon,\n  ExclamationTriangleIcon,\n  GlobeAltIcon,\n  PencilIcon,\n  PlusIcon,\n  Square3Stack3DIcon,\n  TrashIcon,\n} from \"@heroicons/react/24/outline\";\nimport { Button, Dropdown, Input, MenuProps, Modal, message } from \"antd\";\nimport * as React from \"react\";\nimport { IChatSession, IWorkflow, IStatus } from \"../../types\";\nimport { appContext } from \"../../../hooks/provider\";\nimport { fetchJSON, getServerUrl, timeAgo } from \"../../utils\";\nimport { LaunchButton, LoadingOverlay } from \"../../atoms\";\nimport { useConfigStore } from \"../../../hooks/store\";\nimport WorkflowSelector from \"./utils/selectors\";\n\nconst SessionsView = ({}: any) => {\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  const { user } = React.useContext(appContext);\n  const serverUrl = getServerUrl();\n  const listSessionUrl = `${serverUrl}/sessions?user_id=${user?.email}`;\n  const createSessionUrl = `${serverUrl}/sessions`;\n  const publishSessionUrl = `${serverUrl}/sessions/publish`;\n\n  const sessions = useConfigStore((state) => state.sessions);\n\n  const setSessions = useConfigStore((state) => state.setSessions);\n  const sampleSession: IChatSession = {\n    user_id: user?.email || \"\",\n    name:\n      \"New Session \" +\n      new Date().toLocaleString(\"en-US\", {\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true,\n      }),\n  };\n  const [selectedSession, setSelectedSession] =\n    React.useState<IChatSession | null>(sampleSession);\n  // const [session, setSession] =\n  //   React.useState<IChatSession | null>(null);\n  const session = useConfigStore((state) => state.session);\n  const setSession = useConfigStore((state) => state.setSession);\n\n  const isSessionButtonsDisabled = useConfigStore(\n    (state) => state.areSessionButtonsDisabled\n  );\n\n  const deleteSession = (session: IChatSession) => {\n    setError(null);\n    setLoading(true);\n    // const fetch;\n    const deleteSessionUrl = `${serverUrl}/sessions/delete?user_id=${user?.email}&session_id=${session.id}`;\n    const payLoad = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user_id: user?.email,\n        session: session,\n      }),\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        fetchSessions();\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(deleteSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  const [newSessionModalVisible, setNewSessionModalVisible] =\n    React.useState(false);\n\n  const fetchSessions = () => {\n    setError(null);\n    setLoading(true);\n    // const fetch;\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        // message.success(data.message);\n        // console.log(\"sessions\", data);\n        setSessions(data.data);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(listSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  const publishSession = () => {\n    setError(null);\n    setLoading(true);\n\n    const body = {\n      user_id: user?.email,\n      session: session,\n      tags: [\"published\"],\n    };\n    // const fetch;\n    const payLoad = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        // setSessions(data.data);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(publishSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (sessions && sessions.length > 0) {\n      const firstSession = sessions[0];\n      setSession(firstSession);\n    } else {\n      setSession(null);\n    }\n  }, [sessions]);\n\n  const createSession = (session: IChatSession) => {\n    setError(null);\n    setLoading(true);\n\n    // const fetch;\n    const payLoad = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(session),\n    };\n\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        message.success(data.message);\n        fetchSessions();\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(createSessionUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (user) {\n      fetchSessions();\n    }\n  }, []);\n\n  const sessionRows = sessions.map((data: IChatSession, index: number) => {\n    const isSelected = session?.id === data.id;\n    const rowClass = isSelected\n      ? \"bg-accent text-white\"\n      : \"bg-secondary text-primary\";\n\n    let items: MenuProps[\"items\"] = [\n      {\n        label: (\n          <div\n            onClick={() => {\n              console.log(\"deleting session\");\n              deleteSession(data);\n            }}\n          >\n            <TrashIcon\n              role={\"button\"}\n              title={\"Delete\"}\n              className=\"h-4 w-4 mr-1 inline-block\"\n            />\n            Delete\n          </div>\n        ),\n        key: \"delete\",\n      },\n      {\n        label: (\n          <div\n            onClick={() => {\n              // get current clicked session\n              setSelectedSession(data);\n              setNewSessionModalVisible(true);\n            }}\n          >\n            <PencilIcon\n              role={\"button\"}\n              title={\"Edit\"}\n              className=\"h-4 w-4 mr-1 inline-block\"\n            />\n            Edit\n          </div>\n        ),\n        key: \"edit\",\n      },\n      // {\n      //   label: (\n      //     <div\n      //       onClick={() => {\n      //         console.log(\"publishing session\");\n      //         publishSession();\n      //       }}\n      //     >\n      //       <GlobeAltIcon\n      //         role={\"button\"}\n      //         title={\"Publish\"}\n      //         className=\"h-4 w-4 mr-1 inline-block\"\n      //       />\n      //       Publish\n      //     </div>\n      //   ),\n      //   key: \"publish\",\n      // },\n    ];\n\n    items.push();\n    const menu = (\n      <Dropdown\n        menu={{ items: items }}\n        trigger={[\"click\"]}\n        placement=\"bottomRight\"\n      >\n        <div\n          role=\"button\"\n          className={`float-right ml-2 duration-100 hover:bg-secondary font-semibold px-2 pb-1  rounded ${\n            isSelected ? \"hover:text-accent\" : \"\"\n          }`}\n        >\n          <span className={`block -mt-2 ${isSelected ? \"text-white\" : \"\"}`}>\n            {\" \"}\n            ...\n          </span>\n        </div>\n      </Dropdown>\n    );\n\n    return (\n      <div\n        key={\"sessionsrow\" + index}\n        className={`group relative  mb-2 pb-1  border-b border-dashed ${\n          isSessionButtonsDisabled ? \"opacity-50 pointer-events-none\" : \"\"\n        }`}\n      >\n        {items.length > 0 && (\n          <div className=\"  absolute right-2 top-2 group-hover:opacity-100 opacity-0 \">\n            {menu}\n          </div>\n        )}\n        <div\n          className={`rounded p-2 cursor-pointer ${rowClass}`}\n          role=\"button\"\n          onClick={() => {\n            // setWorkflowConfig(data.flow_config);\n            if (!isSessionButtonsDisabled) {\n              setSession(data);\n            }\n          }}\n        >\n          <div className=\"text-xs mt-1\">\n            <Square3Stack3DIcon className=\"h-4 w-4 inline-block mr-1\" />\n            {data.name}\n          </div>\n          <div className=\"text-xs text-right \">\n            {timeAgo(data.created_at || \"\")}\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  let windowHeight, skillsMaxHeight;\n  if (typeof window !== \"undefined\") {\n    windowHeight = window.innerHeight;\n    skillsMaxHeight = windowHeight - 400 + \"px\";\n  }\n\n  const NewSessionModal = ({ session }: { session: IChatSession | null }) => {\n    const [workflow, setWorkflow] = React.useState<IWorkflow | null>(null);\n    const [localSession, setLocalSession] = React.useState<IChatSession | null>(\n      session\n    );\n\n    React.useEffect(() => {\n      if (workflow && workflow.id && localSession) {\n        setLocalSession({ ...localSession, workflow_id: workflow.id });\n      }\n    }, [workflow]);\n\n    const sessionExists =\n      localSession !== null && localSession.id !== undefined;\n\n    return (\n      <Modal\n        onCancel={() => {\n          setNewSessionModalVisible(false);\n        }}\n        title={\n          <div className=\"font-semibold mb-2 pb-1 border-b\">\n            <Square3Stack3DIcon className=\"h-5 w-5 inline-block mr-1\" />\n            New Session{\" \"}\n          </div>\n        }\n        open={newSessionModalVisible}\n        footer={[\n          <Button\n            key=\"back\"\n            onClick={() => {\n              setNewSessionModalVisible(false);\n            }}\n          >\n            Cancel\n          </Button>,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!workflow}\n            onClick={() => {\n              setNewSessionModalVisible(false);\n              if (localSession) {\n                createSession(localSession);\n              }\n            }}\n          >\n            Create\n          </Button>,\n        ]}\n      >\n        <WorkflowSelector\n          workflow={workflow}\n          setWorkflow={setWorkflow}\n          workflow_id={selectedSession?.workflow_id}\n          disabled={sessionExists}\n        />\n        <div className=\"my-2 text-xs\"> Session Name </div>\n        <Input\n          placeholder=\"Session Name\"\n          value={localSession?.name || \"\"}\n          onChange={(event) => {\n            if (localSession) {\n              setLocalSession({ ...localSession, name: event.target.value });\n            }\n          }}\n        />\n        <div className=\"text-xs mt-4\">\n          {\" \"}\n          {timeAgo(localSession?.created_at || \"\", true)}\n        </div>\n      </Modal>\n    );\n  };\n\n  return (\n    <div className=\"  \">\n      <NewSessionModal session={selectedSession || sampleSession} />\n      <div className=\"mb-2 relative\">\n        <div className=\"\">\n          <div className=\"font-semibold mb-2 pb-1 border-b\">\n            <ChatBubbleLeftRightIcon className=\"h-5 w-5 inline-block mr-1\" />\n            Sessions{\" \"}\n          </div>\n          {sessions && sessions.length > 0 && (\n            <div className=\"text-xs  hidden mb-2 pb-1  \">\n              {\" \"}\n              Create a new session or select an existing session to view chat.\n            </div>\n          )}\n          <div\n            style={{\n              maxHeight: skillsMaxHeight,\n            }}\n            className=\"mb-4 overflow-y-auto scroll rounded relative \"\n          >\n            {sessionRows}\n            <LoadingOverlay loading={loading} />\n          </div>\n          {(!sessions || sessions.length == 0) && !loading && (\n            <div className=\"text-xs text-gray-500\">\n              No sessions found. Create a new session to get started.\n            </div>\n          )}\n        </div>\n        <div className=\"flex gap-x-2\">\n          <div className=\"flex-1\"></div>\n          <LaunchButton\n            className={`text-sm p-2 px-3 ${isSessionButtonsDisabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n            onClick={() => {\n              setSelectedSession(sampleSession);\n              setNewSessionModalVisible(true);\n            }}\n          >\n            {\" \"}\n            <PlusIcon className=\"w-5 h-5 inline-block mr-1\" />\n            New\n          </LaunchButton>\n        </div>\n      </div>\n\n      {error && !error.status && (\n        <div className=\"p-2 border border-orange-500 text-secondary  rounded mt-4   text-sm\">\n          {\" \"}\n          <ExclamationTriangleIcon className=\"h-5 text-orange-500 inline-block mr-2\" />{\" \"}\n          {error.message}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SessionsView;\n","import { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/24/outline\";\nimport * as React from \"react\";\nimport SessionsView from \"./sessions\";\n\nconst SideBarView = () => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const minWidth = isOpen ? \"270px\" : \"50px\";\n\n  let windowHeight, sidebarMaxHeight;\n  if (typeof window !== \"undefined\") {\n    windowHeight = window.innerHeight;\n    sidebarMaxHeight = windowHeight - 180 + \"px\";\n  }\n\n  return (\n    <div\n      style={{\n        minWidth: minWidth,\n        maxWidth: minWidth,\n        height: \"calc(100vh - 190px)\",\n      }}\n      className=\"    \"\n    >\n      <div className=\" transition overflow-hidden duration-300  flex flex-col   h-full p-2 overflow-y-scroll scroll rounded \">\n        <div className={`${isOpen ? \"\" : \"hidden\"}  `}>\n          {/* <AgentsView /> */}\n          {<SessionsView />}\n        </div>\n      </div>\n      <div\n        onClick={() => setIsOpen(!isOpen)}\n        role=\"button\"\n        className=\" hover:text-accent duration-150  \"\n      >\n        {isOpen ? (\n          <div className=\"mt-4  \">\n            {\" \"}\n            <ChevronLeftIcon className=\"w-6 h-6  inline-block    rounded\" />{\" \"}\n            <span className=\"text-xs \"> close sidebar</span>\n          </div>\n        ) : (\n          <ChevronRightIcon className=\"w-6 h-6   inline-block   font-bold rounded \" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SideBarView;\n","import * as React from \"react\";\nimport { IChatSession, IMessage, IStatus } from \"../../types\";\nimport { fetchJSON, getServerUrl, setLocalStorage } from \"../../utils\";\nimport ChatBox from \"./chatbox\";\nimport { appContext } from \"../../../hooks/provider\";\nimport { message } from \"antd\";\nimport SideBarView from \"./sidebar\";\nimport { useConfigStore } from \"../../../hooks/store\";\nimport SessionsView from \"./sessions\";\n\nconst RAView = () => {\n  const session: IChatSession | null = useConfigStore((state) => state.session);\n  const [loading, setLoading] = React.useState(false);\n  const [messages, setMessages] = React.useState<IMessage[] | null>(null);\n\n  const [config, setConfig] = React.useState(null);\n\n  React.useEffect(() => {\n    setLocalStorage(\"ara_config\", config);\n  }, [config]);\n\n  const [error, setError] = React.useState<IStatus | null>({\n    status: true,\n    message: \"All good\",\n  });\n\n  const { user } = React.useContext(appContext);\n  const serverUrl = getServerUrl();\n  const fetchMessagesUrl = `${serverUrl}/sessions/${session?.id}/messages?user_id=${user?.email}`;\n\n  const fetchMessages = () => {\n    setError(null);\n    setLoading(true);\n    setMessages(null);\n    const payLoad = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const onSuccess = (data: any) => {\n      if (data && data.status) {\n        setMessages(data.data);\n      } else {\n        message.error(data.message);\n      }\n      setLoading(false);\n    };\n    const onError = (err: any) => {\n      setError(err);\n      message.error(err.message);\n      setLoading(false);\n    };\n    fetchJSON(fetchMessagesUrl, payLoad, onSuccess, onError);\n  };\n\n  React.useEffect(() => {\n    if (user && session) {\n      fetchMessages();\n    }\n  }, [session]);\n\n  return (\n    <div className=\"h-full   \">\n      <div className=\"flex h-full   \">\n        <div className=\"  mr-2  rounded\">\n          <SideBarView />\n        </div>\n        <div className=\" flex-1  \">\n          {!session && (\n            <div className=\" w-full  h-full flex items-center justify-center\">\n              <div className=\"w-2/3\" id=\"middle\">\n                <div className=\"w-full   text-center\">\n                  {\" \"}\n                  <img\n                    src=\"/images/svgs/welcome.svg\"\n                    alt=\"welcome\"\n                    className=\"text-accent inline-block object-cover w-56\"\n                  />\n                </div>\n                <SessionsView />\n              </div>\n            </div>\n          )}\n\n          {session !== null && (\n            <ChatBox initMessages={messages} session={session} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default RAView;\n","import * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql } from \"gatsby\";\nimport RAView from \"../components/views/playground/ra\";\n\n// markup\nconst IndexPage = ({ data }: any) => {\n  return (\n    <Layout meta={data.site.siteMetadata} title=\"Home\" link={\"/\"}>\n      <main style={{ height: \"100%\" }} className=\" h-full \">\n        <RAView />\n      </main>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query HomePageQuery {\n    site {\n      siteMetadata {\n        description\n        title\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import * as React from \"react\";\nfunction ChevronLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 19.5 8.25 12l7.5-7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PlusIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 4.5v15m7.5-7.5h-15\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PlusIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction Square3Stack3DIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.429 9.75 2.25 12l4.179 2.25m0-4.5 5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0 4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0-5.571 3-5.571-3\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(Square3Stack3DIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TrashIcon);\nexport default ForwardRef;"],"names":["ChevronRightIcon","title","titleId","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","PencilIcon","_ref","workflow","setWorkflow","workflow_id","disabled","error","setError","React","status","message","loading","setLoading","workflows","setWorkflows","selectedWorkflow","setSelectedWorkflow","user","appContext","listWorkflowsUrl","getServerUrl","email","fetchJSON","method","headers","data","length","index","findIndex","item","err","className","LoadingOverlay","Select","value","name","onChange","options","map","config","label","Link","to","serverUrl","listSessionUrl","createSessionUrl","sessions","useConfigStore","state","setSessions","sampleSession","user_id","Date","toLocaleString","month","day","hour","minute","hour12","selectedSession","setSelectedSession","session","setSession","isSessionButtonsDisabled","areSessionButtonsDisabled","newSessionModalVisible","setNewSessionModalVisible","fetchSessions","firstSession","sessionRows","isSelected","rowClass","items","onClick","console","log","deleteSessionUrl","payLoad","body","JSON","stringify","success","deleteSession","TrashIcon","role","key","push","menu","Dropdown","trigger","placement","Square3Stack3DIcon","timeAgo","created_at","windowHeight","skillsMaxHeight","window","innerHeight","NewSessionModal","_ref2","localSession","setLocalSession","_objectSpread","sessionExists","undefined","Modal","onCancel","open","footer","Button","type","createSession","WorkflowSelector","Input","placeholder","event","target","ChatBubbleLeftRightIcon","style","maxHeight","LaunchButton","PlusIcon","ExclamationTriangleIcon","SideBarView","isOpen","setIsOpen","minWidth","sidebarMaxHeight","maxWidth","height","SessionsView","ChevronLeftIcon","RAView","messages","setMessages","setConfig","setLocalStorage","fetchMessagesUrl","src","alt","ChatBox","initMessages","Layout","meta","site","siteMetadata","link","ForwardRef"],"sourceRoot":""}